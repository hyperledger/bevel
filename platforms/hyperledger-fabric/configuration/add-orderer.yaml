##############################################################################################
#  Copyright Accenture. All Rights Reserved.
#
#  SPDX-License-Identifier: Apache-2.0
##############################################################################################

# This playbook adds an orderer to a DLT network on existing Kubernetes clusters
# The Kubernetes clusters should already be created and the infomation to connect to the
#  clusters be updated in the network.yaml file that is used as an input to this playbook
###########################################################################################
# To Run this playbook from this directory, use the following command (network.yaml also in this directory)
#  ansible-playbook add-orderer.yaml -e "@./network.yaml" -e "add_orderer=true"
############################################################################################
# Please ensure that the ../../shared/configuration playbooks have been run and a DLT network exists.
---
  # This will apply to ansible_provisioners. /etc/ansible/hosts should be configured with this group
- hosts: ansible_provisioners
  gather_facts: no
  no_log: "{{ no_ansible_log | default(false) }}"
  tasks:
  # delete build directory
  - name: Remove build directory
    file:
      path: "./build"
      state: absent

  # Generate script to modify the fetched configuration block
  - name: "Modify the system channel with tls information of new orderer"
    include_role:
      name: "create/new_orderer/create_syschannel_block"
    vars:
      build_path: "./build"
      orderers: "{{ org.services.orderers }}"
      docker_url: "{{ network.docker.url }}"
      channel_name: "syschannel"
      update_type: "tls"
      component_ns: "{{ org.name | lower}}-net"
    loop: "{{ network.organizations }}"
    loop_control:
      loop_var: org
    when: org.type == 'orderer' and '2.5.' not in network.version

  # This role creates value file new orderer
  - name: "create new orderer"
    include_role:
      name: "create/orderers"
    vars:
      build_path: "./build"
      namespace: "{{ org.name | lower}}-net"
      component_type: "{{ org.type | lower}}"
      org_name: "{{ org.name | lower }}"
      component_services: "{{ org.services }}"
      kubernetes: "{{ org.k8s }}"
      vault: "{{ org.vault }}"
      git_protocol: "{{ org.gitops.git_protocol }}"
      git_url: "{{ org.gitops.git_url }}"
      git_branch: "{{ org.gitops.branch }}"
      docker_url: "{{ network.docker.url }}"
      charts_dir: "{{ org.gitops.chart_source }}"
      values_dir: "{{playbook_dir}}/../../../{{org.gitops.release_dir}}/{{ org.name | lower }}"
    loop: "{{ network['organizations'] }}"
    loop_control:
        loop_var: org
    when: org.services.orderers is defined and org.services.orderers | length > 0

  # Generate script to modify the fetched configuration block
  - name: "Modify the system channel with endpoint information of new orderer"
    include_role:
      name: "create/new_orderer/create_syschannel_block"
    vars:
      build_path: "./build"
      orderers: "{{ org.services.orderers }}"
      docker_url: "{{ network.docker.url }}"
      channel_name: "syschannel"
      update_type: "address"
      component_ns: "{{ org.name | lower}}-net"
    loop: "{{ network.organizations }}"
    loop_control:
      loop_var: org
    when: org.type == 'orderer' and '2.5.' not in network.version

  # This role creates the value file for creating channel from creator organization
  # to the vault.
  - name: Create all create-channel jobs
    include_role:
      name: "create/osnchannels"
    vars:
      build_path: "./build"
      docker_url: "{{ network.docker.url }}"
    loop: "{{ network['channels'] }}"
    when: add_new_org == 'false' and '2.5.' in network.version

  # Generate script to modify the fetched configuration block from application channel
  - name: "Modify the application channel with tls and address information of new orderer"
    include_role:
      name: "create/new_orderer/create_appchannel_block"
    vars:
      build_path: "./build"
      channel_name: "{{ channel.channel_name | lower }}"
      org_peer: "{{ channel.participants | first}}"
      vault: "{{ org.vault }}"
      existingOrdererAddress: "{{ org_peer.ordererAddress }}"
      peer: "{{ org_peer.peers | first }}"
      docker_url: "{{ network.docker.url }}"
    loop: "{{ network.channels }}"
    loop_control:
      loop_var: channel
    when: '2.5.' not in network.version

  vars: #These variables can be overriden from the command line
    add_new_org: 'false'                #Default for this playbook is false
    add_orderer: 'true'                 #Default for this playbook is true
